mAbs(x,tTop,mVar(x)):tArr(tTop,tTop)
mAbs(x,tTop,mVar(x)):tTop
mAbs(x,tTop,mVar(x)):tArr(tTop,tTop)
mAbs(z,tTop,mVar(z)):tTop
mString(hello):tString
mUnit:tUnit
mAbs(x,tVar(A),mVar(x)):tArr(tVar(A),tVar(A))
mTrue:tBool
mRecord([x=mTrue,y=mFalse]):tRecord([x:tBool,y:tBool])
mTrue:tBool
mRecord([1=mTrue,2=mFalse]):tRecord([1:tBool,2:tBool])
mTrue:tBool
mRecord([x=mTrue,y=mFalse,a=mFalse]):tRecord([x:tTop,y:tBool])
mFloat(6.28318):tFloat
mTAbs(X,tTop,mAbs(x,tVar(X),mVar(x))):tAll(X,tTop,tArr(tVar(X),tVar(X)))
mAbs(x,tAll(X,tTop,tArr(tVar(X),tVar(X))),mVar(x)):tArr(tAll(X,tTop,tArr(tVar(X),tVar(X))),tAll(X,tTop,tArr(tVar(X),tVar(X))))
mTAbs(X,tArr(tTop,tTop),mAbs(x,tVar(X),mApp(mVar(x),mVar(x)))):tAll(X,tArr(tTop,tTop),tArr(tVar(X),tTop))
mAbs(x,tBool,mVar(x)):tArr(tBool,tBool)
mTrue:tBool
mAbs(x,tNat,mSucc(mVar(x))):tArr(tNat,tNat)
mSucc(mSucc(mSucc(mZero))):tNat
T :: *
mAbs(f,tVar(T),mAbs(x,tNat,mApp(mVar(f),mApp(mVar(f),mVar(x))))):tArr(tVar(T),tArr(tNat,tNat))
mPack(tAll(Y,tTop,tVar(Y)),mAbs(x,tAll(Y,tTop,tVar(Y)),mVar(x)),tSome(X,tTop,tArr(tVar(X),tVar(X)))):tSome(X,tTop,tArr(tVar(X),tVar(X)))
mPack(tNat,mRecord([c=mZero,f=mAbs(x,tNat,mSucc(mVar(x)))]),tSome(X,tTop,tRecord([c:tVar(X),f:tArr(tVar(X),tNat)]))):tSome(X,tTop,tRecord([c:tVar(X),f:tArr(tVar(X),tNat)]))
mSucc(mZero):tNat
