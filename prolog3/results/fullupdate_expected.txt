fn(x,top,x):arr(top,top)
fn(x,top,x):top
fn(x,top,x):arr(top,top)
fn(z,top,z):top
hello:string
unit:unit
fn(x,A,x):arr(A,A)
true:bool
record([x=(covariant,true),y=(covariant,false)]):record([x:(covariant,bool),y:(covariant,bool)])
true:bool
record([1=(covariant,true),2=(covariant,false)]):record([1:(covariant,bool),2:(covariant,bool)])
true:bool
record([x=(covariant,true),y=(covariant,false),a=(covariant,false)]):record([x:(covariant,top),y:(covariant,bool)])
6.28318:float
tfn(X,top,fn(x,X,x)):all(X,top,arr(X,X))
fn(x,all(X,top,arr(X,X)),x):arr(all(X,top,arr(X,X)),all(X,top,arr(X,X)))
tfn(X,arr(top,top),fn(x,X,app(x,x))):all(X,arr(top,top),arr(X,top))
fn(x,bool,x):arr(bool,bool)
true:bool
fn(x,nat,succ(x)):arr(nat,nat)
succ(succ(succ(zero))):nat
T :: *
fn(f,T,fn(x,nat,app(f,app(f,x)))):arr(T,arr(nat,nat))
pack(all(Y,top,Y),fn(x,all(Y,top,Y),x),some(X,top,arr(X,X))):some(X,top,arr(X,X))
pack(nat,record([c=(covariant,zero),f=(covariant,fn(x,nat,succ(x)))]),some(X,top,record([c:(covariant,X),f:(covariant,arr(X,nat))]))):some(X,top,record([c:(covariant,X),f:(covariant,arr(X,nat))]))
succ(zero):nat
Pair :: kArr(*,kArr(*,*))
pair : all(X,top,all(Y,top,arr(X,arr(Y,all(R,top,arr(arr(X,arr(Y,R)),R))))))
fst : all(X,top,all(Y,top,arr(app(app(Pair,X),Y),X)))
snd : all(X,top,all(Y,top,arr(app(app(Pair,X),Y),Y)))
List :: kArr(*,*)
diverge : all(X,top,arr(unit,X))
nil : all(X,top,app(List,X))
cons : all(X,top,arr(X,arr(app(List,X),app(List,X))))
isnil : all(X,top,arr(app(List,X),bool))
head : all(X,top,arr(app(List,X),X))
tail : all(X,top,arr(app(List,X),app(List,X)))
