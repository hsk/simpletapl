fn(x,bool,x):arr(bool,bool)
fn(x,bool,fn(x,bool,x)):arr(bool,arr(bool,bool))
true:bool
a : bool
a:bool
app(fn(x,bool,x),a):bool
app(fn(x,bool,app(fn(x,bool,x),x)),a):bool
true:bool
true:bool
fn(x,A,x):arr(A,A)
true:bool
fn(x,bool,x):arr(bool,bool)
true:bool
fn(x,nat,succ(x)):arr(nat,nat)
zero:nat
succ(zero):nat
succ(zero):nat
succ(succ(succ(zero))):nat
T :: *
T :: *
fn(f,arr(nat,nat),fn(x,nat,app(f,app(f,x)))):arr(arr(nat,nat),arr(nat,nat))
T :: *
fn(f,T,f):arr(T,T)
T :: *
fn(f,T,app(f,zero)):arr(T,nat)
T :: *
fn(f,T,fn(x,nat,app(f,app(f,x)))):arr(T,arr(nat,nat))
tfn(X,fn(x,X,x)):all(X,arr(X,X))
fn(x,all(X,arr(X,X)),x):arr(all(X,arr(X,X)),all(X,arr(X,X)))
