syntax_check:tag(none,zero,variant([none:nat,some:nat]))
syntax_ok:tag(none,zero,variant([none:nat,some:nat]))typeok
eval1:[];tag(none,zero,variant([none:nat,some:nat]))
evalok
tag(none,zero,variant([none:nat,some:nat])):variant([none:nat,some:nat])
syntax_check:case(tag(none,zero,variant([none:nat])),[none=(x,zero)])
syntax_ok:case(tag(none,zero,variant([none:nat])),[none=(x,zero)])error:typeof([],zero)
error:typeof([],tag(none,zero,variant([none:nat])))
typeok
eval1:[];case(tag(none,zero,variant([none:nat])),[none=(x,zero)])
eval1:[];zero
evalok
zero:nat
syntax_check:fn(x,bot,x)
syntax_ok:fn(x,bot,x)typeok
eval1:[];fn(x,bot,x)
evalok
fn(x,bot,x):arr(bot,bot)
syntax_check:fn(x,bot,app(x,x))
syntax_ok:fn(x,bot,app(x,x))typeok
eval1:[];fn(x,bot,app(x,x))
evalok
fn(x,bot,app(x,x)):arr(bot,bot)
syntax_check:fn(x,variant([a:bool,b:bool]),x)
syntax_ok:fn(x,variant([a:bool,b:bool]),x)typeok
eval1:[];fn(x,variant([a:bool,b:bool]),x)
evalok
fn(x,variant([a:bool,b:bool]),x):arr(variant([a:bool,b:bool]),variant([a:bool,b:bool]))
syntax_check:fn(x,top,x)
syntax_ok:fn(x,top,x)typeok
eval1:[];fn(x,top,x)
evalok
fn(x,top,x):arr(top,top)
syntax_check:app(fn(x,top,x),fn(x,top,x))
syntax_ok:app(fn(x,top,x),fn(x,top,x))typeok
eval1:[];app(fn(x,top,x),fn(x,top,x))
eval1:[];fn(x,top,x)
evalok
fn(x,top,x):top
syntax_check:app(fn(x,arr(top,top),x),fn(x,top,x))
syntax_ok:app(fn(x,arr(top,top),x),fn(x,top,x))typeok
eval1:[];app(fn(x,arr(top,top),x),fn(x,top,x))
eval1:[];fn(x,top,x)
evalok
fn(x,top,x):arr(top,top)
syntax_check:app(fn(r,record([x:arr(top,top)]),app(proj(r,x),proj(r,x))),record([x=fn(z,top,z),y=fn(z,top,z)]))
syntax_ok:app(fn(r,record([x:arr(top,top)]),app(proj(r,x),proj(r,x))),record([x=fn(z,top,z),y=fn(z,top,z)]))typeok
eval1:[];app(fn(r,record([x:arr(top,top)]),app(proj(r,x),proj(r,x))),record([x=fn(z,top,z),y=fn(z,top,z)]))
eval1:[];app(proj(record([x=fn(z,top,z),y=fn(z,top,z)]),x),proj(record([x=fn(z,top,z),y=fn(z,top,z)]),x))
eval1:[];proj(record([x=fn(z,top,z),y=fn(z,top,z)]),x)
eval1:[];app(fn(z,top,z),proj(record([x=fn(z,top,z),y=fn(z,top,z)]),x))
eval1:[];proj(record([x=fn(z,top,z),y=fn(z,top,z)]),x)
eval1:[];app(fn(z,top,z),fn(z,top,z))
eval1:[];fn(z,top,z)
evalok
fn(z,top,z):top
syntax_check:hello
syntax_ok:hellotypeok
eval1:[];hello
evalok
hello:string
syntax_check:unit
syntax_ok:unittypeok
eval1:[];unit
evalok
unit:unit
syntax_check:record([x=true,y=false])
syntax_ok:record([x=true,y=false])typeok
eval1:[];record([x=true,y=false])
evalok
record([x=true,y=false]):record([x:bool,y:bool])
syntax_check:proj(record([x=true,y=false]),x)
syntax_ok:proj(record([x=true,y=false]),x)typeok
eval1:[];proj(record([x=true,y=false]),x)
eval1:[];true
evalok
true:bool
syntax_check:record([1=true,2=false])
syntax_ok:record([1=true,2=false])typeok
eval1:[];record([1=true,2=false])
evalok
record([1=true,2=false]):record([1:bool,2:bool])
syntax_check:proj(record([1=true,2=false]),1)
syntax_ok:proj(record([1=true,2=false]),1)typeok
eval1:[];proj(record([1=true,2=false]),1)
eval1:[];true
evalok
true:bool
syntax_check:if(true,record([x=true,y=false,a=false]),record([y=false,x=record([]),b=false]))
syntax_ok:if(true,record([x=true,y=false,a=false]),record([y=false,x=record([]),b=false]))typeok
eval1:[];if(true,record([x=true,y=false,a=false]),record([y=false,x=record([]),b=false]))
eval1:[];record([x=true,y=false,a=false])
evalok
record([x=true,y=false,a=false]):record([x:top,y:bool])
syntax_check:try(error,true)
syntax_ok:try(error,true)typeok
eval1:[];try(error,true)
eval1:[];true
evalok
true:bool
syntax_check:try(if(true,error,true),false)
syntax_ok:try(if(true,error,true),false)typeok
eval1:[];try(if(true,error,true),false)
eval1:[];if(true,error,true)
eval1:[];try(error,false)
eval1:[];false
evalok
false:bool
syntax_check:timesfloat(2.0,3.14159)
syntax_ok:timesfloat(2.0,3.14159)typeok
eval1:[];timesfloat(2.0,3.14159)
eval1:[];6.28318
evalok
6.28318:float
syntax_check:tfn(X,top,fn(x,X,x))
syntax_ok:tfn(X,top,fn(x,X,x))typeok
eval1:[];tfn(X,top,fn(x,X,x))
evalok
tfn(X,top,fn(x,X,x)):all(X,top,arr(X,X))
syntax_check:tfn(X,arr(top,top),fn(x,X,app(x,x)))
syntax_ok:tfn(X,arr(top,top),fn(x,X,app(x,x)))typeok
eval1:[];tfn(X,arr(top,top),fn(x,X,app(x,x)))
evalok
tfn(X,arr(top,top),fn(x,X,app(x,x))):all(X,arr(top,top),arr(X,top))
syntax_check:fn(x,bool,x)
syntax_ok:fn(x,bool,x)typeok
eval1:[];fn(x,bool,x)
evalok
fn(x,bool,x):arr(bool,bool)
syntax_check:if(error,true,false)
syntax_ok:if(error,true,false)typeok
eval1:[];if(error,true,false)
eval1:[];error
evalok
error:bool
syntax_check:app(error,true)
syntax_ok:app(error,true)typeok
eval1:[];app(error,true)
eval1:[];error
evalok
error:bot
syntax_check:app(fn(x,bool,x),error)
syntax_ok:app(fn(x,bool,x),error)typeok
eval1:[];app(fn(x,bool,x),error)
eval1:[];error
evalok
error:bool
syntax_check:fn(x,nat,succ(x))
syntax_ok:fn(x,nat,succ(x))typeok
eval1:[];fn(x,nat,succ(x))
evalok
fn(x,nat,succ(x)):arr(nat,nat)
syntax_check:app(fn(x,nat,succ(succ(x))),succ(zero))
syntax_ok:app(fn(x,nat,succ(succ(x))),succ(zero))typeok
eval1:[];app(fn(x,nat,succ(succ(x))),succ(zero))
eval1:[];succ(succ(succ(zero)))
evalok
succ(succ(succ(zero))):nat
T :: *
syntax_check:fn(f,T,fn(x,nat,app(f,app(f,x))))
syntax_ok:fn(f,T,fn(x,nat,app(f,app(f,x))))typeok
eval1:[];fn(f,T,fn(x,nat,app(f,app(f,x))))
evalok
fn(f,T,fn(x,nat,app(f,app(f,x)))):arr(T,arr(nat,nat))
CounterRep :: *
SetCounter :: *
eval1:[];fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)))
setCounterClass : arr(CounterRep,arr(arr(unit,SetCounter),arr(unit,SetCounter)))
eval1:[];fn(_,unit,let(r,record([x=ref(succ(zero))]),app(fix(app(setCounterClass,r)),unit)))
newSetCounter : arr(unit,SetCounter)
eval1:[];app(newSetCounter,unit)
eval1:[];newSetCounter
eval1:[];app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(fix(app(setCounterClass,r)),unit))),unit)
eval1:[];let(r,record([x=ref(succ(zero))]),app(fix(app(setCounterClass,r)),unit))
eval1:[];ref(succ(zero))
eval1:[succ(zero)];let(r,record([x=loc(0)]),app(fix(app(setCounterClass,r)),unit))
eval1:[succ(zero)];app(fix(app(setCounterClass,record([x=loc(0)]))),unit)
eval1:[succ(zero)];setCounterClass
eval1:[succ(zero)];app(fix(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(0)]))),unit)
eval1:[succ(zero)];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(0)]))
eval1:[succ(zero)];app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit)
eval1:[succ(zero)];fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)))
eval1:[succ(zero)];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),set),succ(app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero)];record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),set),succ(app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),get),unit))))])as SetCounter
eval1:[succ(zero)];record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),set),succ(app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),get),unit))))])
c : SetCounter
syntax_check:app(proj(c,get),unit)
syntax_ok:app(proj(c,get),unit)typeok
eval1:[succ(zero)];app(proj(c,get),unit)
eval1:[succ(zero)];c
eval1:[succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),set),succ(app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),get),unit))))]),get),unit)
eval1:[succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),set),succ(app(proj(app(fix(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(0)]),x))),set=fn(i,nat,assign(proj(record([x=loc(0)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),unit),get),unit))))]),get)
eval1:[succ(zero)];app(fn(_,unit,deref(proj(record([x=loc(0)]),x))),unit)
eval1:[succ(zero)];deref(proj(record([x=loc(0)]),x))
eval1:[succ(zero)];proj(record([x=loc(0)]),x)
eval1:[succ(zero)];deref(loc(0))
eval1:[succ(zero)];succ(zero)
evalok
succ(zero):nat
InstrCounter :: *
InstrCounterRep :: *
eval1:[succ(zero)];fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(r,a),succ(deref(proj(r,a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))))
instrCounterClass : arr(InstrCounterRep,arr(arr(unit,InstrCounter),arr(unit,InstrCounter)))
eval1:[succ(zero)];fn(_,unit,let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fix(app(instrCounterClass,r)),unit)))
newInstrCounter : arr(unit,InstrCounter)
eval1:[succ(zero)];app(newInstrCounter,unit)
eval1:[succ(zero)];newInstrCounter
eval1:[succ(zero)];app(fn(_,unit,let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fix(app(instrCounterClass,r)),unit))),unit)
eval1:[succ(zero)];let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fix(app(instrCounterClass,r)),unit))
eval1:[succ(zero)];ref(succ(zero))
eval1:[succ(zero),succ(zero)];let(r,record([x=loc(1),a=ref(zero)]),app(fix(app(instrCounterClass,r)),unit))
eval1:[succ(zero),succ(zero)];ref(zero)
eval1:[succ(zero),succ(zero),zero];let(r,record([x=loc(1),a=loc(2)]),app(fix(app(instrCounterClass,r)),unit))
eval1:[succ(zero),succ(zero),zero];app(fix(app(instrCounterClass,record([x=loc(1),a=loc(2)]))),unit)
eval1:[succ(zero),succ(zero),zero];instrCounterClass
eval1:[succ(zero),succ(zero),zero];app(fix(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(r,a),succ(deref(proj(r,a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(1),a=loc(2)]))),unit)
eval1:[succ(zero),succ(zero),zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(r,a),succ(deref(proj(r,a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(1),a=loc(2)]))
eval1:[succ(zero),succ(zero),zero];app(fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)))),unit)
eval1:[succ(zero),succ(zero),zero];fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(zero),zero];let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];setCounterClass
eval1:[succ(zero),succ(zero),zero];let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)]))
eval1:[succ(zero),succ(zero),zero];let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))
eval1:[succ(zero),succ(zero),zero];let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)))
eval1:[succ(zero),succ(zero),zero];let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(zero),zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter,record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(zero),zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];record([get=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])
ic : InstrCounter
syntax_check:app(proj(ic,get),unit)
syntax_ok:app(proj(ic,get),unit)typeok
eval1:[succ(zero),succ(zero),zero];app(proj(ic,get),unit)
eval1:[succ(zero),succ(zero),zero];ic
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get),unit)
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get)
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),unit)
eval1:[succ(zero),succ(zero),zero];deref(proj(record([x=loc(1),a=loc(2)]),x))
eval1:[succ(zero),succ(zero),zero];proj(record([x=loc(1),a=loc(2)]),x)
eval1:[succ(zero),succ(zero),zero];deref(loc(1))
eval1:[succ(zero),succ(zero),zero];succ(zero)
evalok
succ(zero):nat
syntax_check:app(proj(ic,accesses),unit)
syntax_ok:app(proj(ic,accesses),unit)typeok
eval1:[succ(zero),succ(zero),zero];app(proj(ic,accesses),unit)
eval1:[succ(zero),succ(zero),zero];ic
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),accesses),unit)
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),accesses)
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a))),unit)
eval1:[succ(zero),succ(zero),zero];deref(proj(record([x=loc(1),a=loc(2)]),a))
eval1:[succ(zero),succ(zero),zero];proj(record([x=loc(1),a=loc(2)]),a)
eval1:[succ(zero),succ(zero),zero];deref(loc(2))
eval1:[succ(zero),succ(zero),zero];zero
evalok
zero:nat
syntax_check:app(proj(ic,inc),unit)
syntax_ok:app(proj(ic,inc),unit)typeok
eval1:[succ(zero),succ(zero),zero];app(proj(ic,inc),unit)
eval1:[succ(zero),succ(zero),zero];ic
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),inc),unit)
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),inc)
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),unit)
eval1:[succ(zero),succ(zero),zero];app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];setCounterClass
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)]))
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)))
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter,record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(zero),zero];app(proj(let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter
eval1:[succ(zero),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),set)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];setCounterClass
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(1),a=loc(2)]))
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)))
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter,record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter),get),unit)))
eval1:[succ(zero),succ(zero),zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(record([get=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter,get),unit)))
eval1:[succ(zero),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get),unit)))
eval1:[succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),unit)))
eval1:[succ(zero),succ(zero),zero];app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),unit)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(deref(proj(record([x=loc(1),a=loc(2)]),x))))
eval1:[succ(zero),succ(zero),zero];proj(record([x=loc(1),a=loc(2)]),x)
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(deref(loc(1))))
eval1:[succ(zero),succ(zero),zero];deref(loc(1))
eval1:[succ(zero),succ(zero),zero];app(fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),succ(succ(zero)))
eval1:[succ(zero),succ(zero),zero];let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(zero),zero];proj(record([x=loc(1),a=loc(2)]),a)
eval1:[succ(zero),succ(zero),zero];let(_,assign(loc(2),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(zero),zero];proj(record([x=loc(1),a=loc(2)]),a)
eval1:[succ(zero),succ(zero),zero];let(_,assign(loc(2),succ(deref(loc(2)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(zero),zero];deref(loc(2))
eval1:[succ(zero),succ(zero),zero];let(_,assign(loc(2),succ(zero)),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(zero),zero];assign(loc(2),succ(zero))
eval1:[succ(zero),succ(zero),succ(zero)];let(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(zero),succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))
eval1:[succ(zero),succ(zero),succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set)
eval1:[succ(zero),succ(zero),succ(zero)];app(fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),succ(succ(zero)))
eval1:[succ(zero),succ(zero),succ(zero)];assign(proj(record([x=loc(1),a=loc(2)]),x),succ(succ(zero)))
eval1:[succ(zero),succ(zero),succ(zero)];proj(record([x=loc(1),a=loc(2)]),x)
eval1:[succ(zero),succ(zero),succ(zero)];assign(loc(1),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];unit
evalok
unit:unit
syntax_check:app(proj(ic,get),unit)
syntax_ok:app(proj(ic,get),unit)typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(proj(ic,get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];deref(proj(record([x=loc(1),a=loc(2)]),x))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];proj(record([x=loc(1),a=loc(2)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];deref(loc(1))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];succ(succ(zero))
evalok
succ(succ(zero)):nat
syntax_check:app(proj(ic,accesses),unit)
syntax_ok:app(proj(ic,accesses),unit)typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(proj(ic,accesses),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),accesses),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1),a=loc(2)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit))))]),set),i))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),fix(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(1),a=loc(2)])),self),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter))))),unit),record([get=proj(super,get),set=fn(i,nat,let(_,assign(proj(record([x=loc(1),a=loc(2)]),a),succ(deref(proj(record([x=loc(1),a=loc(2)]),a)))),app(proj(super,set),i))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))])as InstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(fn(_,unit,deref(proj(record([x=loc(1),a=loc(2)]),a))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];deref(proj(record([x=loc(1),a=loc(2)]),a))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];proj(record([x=loc(1),a=loc(2)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];deref(loc(2))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];succ(zero)
evalok
succ(zero):nat
eval1:[succ(zero),succ(succ(zero)),succ(zero)];fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))))
instrCounterClass : arr(InstrCounterRep,arr(arr(unit,InstrCounter),arr(unit,InstrCounter)))
ResetInstrCounter :: *
eval1:[succ(zero),succ(succ(zero)),succ(zero)];fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter))))
resetInstrCounterClass : arr(InstrCounterRep,arr(arr(unit,ResetInstrCounter),arr(unit,ResetInstrCounter)))
BackupInstrCounter :: *
BackupInstrCounterRep :: *
eval1:[succ(zero),succ(succ(zero)),succ(zero)];fn(r,BackupInstrCounterRep,fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),deref(proj(r,b)))),backup=fn(_,unit,assign(proj(r,b),deref(proj(r,x))))])as BackupInstrCounter))))
backupInstrCounterClass : arr(BackupInstrCounterRep,arr(arr(unit,BackupInstrCounter),arr(unit,BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];fn(_,unit,let(r,record([x=ref(succ(zero)),a=ref(zero),b=ref(zero)]),app(fix(app(backupInstrCounterClass,r)),unit)))
newBackupInstrCounter : arr(unit,BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(newBackupInstrCounter,unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];newBackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero)];app(fn(_,unit,let(r,record([x=ref(succ(zero)),a=ref(zero),b=ref(zero)]),app(fix(app(backupInstrCounterClass,r)),unit))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero)];let(r,record([x=ref(succ(zero)),a=ref(zero),b=ref(zero)]),app(fix(app(backupInstrCounterClass,r)),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero)];ref(succ(zero))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero)];let(r,record([x=loc(3),a=ref(zero),b=ref(zero)]),app(fix(app(backupInstrCounterClass,r)),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero)];ref(zero)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero];let(r,record([x=loc(3),a=loc(4),b=ref(zero)]),app(fix(app(backupInstrCounterClass,r)),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero];ref(zero)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(r,record([x=loc(3),a=loc(4),b=loc(5)]),app(fix(app(backupInstrCounterClass,r)),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fix(app(backupInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)]))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];backupInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fix(app(fn(r,BackupInstrCounterRep,fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),deref(proj(r,b)))),backup=fn(_,unit,assign(proj(r,b),deref(proj(r,x))))])as BackupInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,BackupInstrCounterRep,fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),deref(proj(r,b)))),backup=fn(_,unit,assign(proj(r,b),deref(proj(r,x))))])as BackupInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];resetInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];instrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,app(app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];setCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter,record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])
ic : BackupInstrCounter
syntax_check:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))
syntax_ok:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),inc),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];resetInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];instrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];setCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter,record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];resetInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];instrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];setCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter,record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(zero))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),zero,zero];assign(loc(4),succ(zero))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(deref(loc(3)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),assign(loc(4),succ(deref(loc(4))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),assign(loc(4),succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(zero),zero];assign(loc(4),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(3),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(zero),succ(succ(zero)),zero];assign(loc(3),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(proj(ic,get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(proj(ic,get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(zero)),zero];assign(loc(4),succ(succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];succ(succ(zero))
evalok
succ(succ(zero)):nat
syntax_check:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,backup),unit))
syntax_ok:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,backup),unit))typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,backup),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),backup),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),backup)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(5),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(5),deref(loc(3))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(5),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),zero];assign(loc(5),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(proj(ic,get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(succ(succ(succ(zero))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(zero))),succ(succ(zero))];assign(loc(4),succ(succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];succ(succ(zero))
evalok
succ(succ(zero)):nat
syntax_check:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))
syntax_ok:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,inc),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),inc),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];resetInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];instrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];setCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter,record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];resetInstrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,InstrCounterRep,fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,r),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(r,x),zero))])as ResetInstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,ResetInstrCounter),fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(app(instrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];instrCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,InstrCounterRep,fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,r),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(r,a),succ(deref(proj(r,a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,InstrCounter),fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter))),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(app(setCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];setCounterClass
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)])),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(r,CounterRep,fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter))),record([x=loc(3),a=loc(4),b=loc(5)]))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(self,arr(unit,SetCounter),fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(self,unit),set),succ(app(proj(app(self,unit),get),unit))))])as SetCounter)),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter,record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))])as SetCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),record([get=fn(_,unit,app(fn(_,unit,app(proj(super,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(super,set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(super,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))])as InstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter,record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))])as ResetInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];let(super,record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),inc)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),zero))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter,get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(succ(succ(succ(succ(zero))))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(zero)))),succ(succ(zero))];assign(loc(4),succ(succ(succ(succ(succ(zero))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(deref(loc(3)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),succ(succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),assign(loc(4),succ(deref(loc(4))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),assign(loc(4),succ(succ(succ(succ(succ(succ(zero)))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(zero))))),succ(succ(zero))];assign(loc(4),succ(succ(succ(succ(succ(succ(zero)))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),succ(succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(3),succ(succ(succ(zero)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];assign(loc(3),succ(succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(proj(ic,get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(succ(succ(succ(succ(succ(succ(zero)))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(zero)))))),succ(succ(zero))];assign(loc(4),succ(succ(succ(succ(succ(succ(succ(zero))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];succ(succ(succ(zero)))
evalok
succ(succ(succ(zero))):nat
syntax_check:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,reset),unit))
syntax_ok:app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,reset),unit))typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(ic,reset),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),reset),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),reset)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),app(fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),unit))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(3),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(3),deref(loc(5))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];deref(loc(5))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),assign(loc(3),succ(succ(zero))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(succ(zero))),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];assign(loc(3),succ(succ(zero)))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(ic,get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(proj(ic,get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(deref(loc(4)))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(loc(4),succ(succ(succ(succ(succ(succ(succ(succ(zero))))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(zero))))))),succ(succ(zero))];assign(loc(4),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),x)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];deref(loc(3))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];succ(succ(zero))
evalok
succ(succ(zero)):nat
syntax_check:app(proj(ic,accesses),unit)
syntax_ok:app(proj(ic,accesses),unit)typeok
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(proj(ic,accesses),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];ic
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),accesses),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];proj(record([get=fn(_,unit,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),get),unit)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),set=fn(i,nat,app(fn(_,unit,app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),i)),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit))))]),set),i)),assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a),succ(deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)))))),inc=fn(_,unit,app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),set),succ(app(proj(app(fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),fix(fn(self,arr(unit,BackupInstrCounter),fn(_,unit,let(super,app(app(app(resetInstrCounterClass,record([x=loc(3),a=loc(4),b=loc(5)])),self),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter))))),unit),record([get=proj(super,get),set=proj(super,set),inc=proj(super,inc),accesses=proj(super,accesses),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))])as BackupInstrCounter)),unit),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),reset=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b)))),backup=fn(_,unit,assign(proj(record([x=loc(3),a=loc(4),b=loc(5)]),b),deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),x))))]),accesses)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))),unit)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];deref(proj(record([x=loc(3),a=loc(4),b=loc(5)]),a))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];proj(record([x=loc(3),a=loc(4),b=loc(5)]),a)
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];deref(loc(4))
eval1:[succ(zero),succ(succ(zero)),succ(zero),succ(succ(zero)),succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))),succ(succ(zero))];succ(succ(succ(succ(succ(succ(succ(succ(zero))))))))
evalok
succ(succ(succ(succ(succ(succ(succ(succ(zero)))))))):nat
CounterRep :: *
SetCounter :: *
SetCounterMethodTable :: *
eval1:[];fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)])))
packGet : arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))
error:typeof([mt-bVar(SetCounterMethodTable),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,get))
error:typeof([mt-bVar(SetCounterMethodTable),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,get))
error:typeof([mt-bVar(SetCounterMethodTable),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,get))
error:typeof([mt-bVar(SetCounterMethodTable),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],deref(proj(mt,get)))
eval1:[];fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)]))
unpackGet : arr(SetCounterMethodTable,arr(unit,nat))
eval1:[];fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)])))
packSet : arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))
error:typeof([mt-bVar(SetCounterMethodTable),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,set))
error:typeof([mt-bVar(SetCounterMethodTable),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,set))
error:typeof([mt-bVar(SetCounterMethodTable),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,set))
error:typeof([mt-bVar(SetCounterMethodTable),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],deref(proj(mt,set)))
eval1:[];fn(mt,SetCounterMethodTable,case(deref(proj(mt,set)),[none=(x,error),some=(f,f)]))
unpackSet : arr(SetCounterMethodTable,arr(nat,unit))
eval1:[];fn(f,arr(unit,unit),tag(some,f,variant([none:unit,some:arr(unit,unit)])))
packInc : arr(arr(unit,unit),variant([none:unit,some:arr(unit,unit)]))
error:typeof([mt-bVar(SetCounterMethodTable),packInc-bMAbb(fn(f,arr(unit,unit),tag(some,f,variant([none:unit,some:arr(unit,unit)]))),arr(arr(unit,unit),variant([none:unit,some:arr(unit,unit)]))),unpackSet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,set)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(nat,unit))),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,inc))
error:typeof([mt-bVar(SetCounterMethodTable),packInc-bMAbb(fn(f,arr(unit,unit),tag(some,f,variant([none:unit,some:arr(unit,unit)]))),arr(arr(unit,unit),variant([none:unit,some:arr(unit,unit)]))),unpackSet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,set)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(nat,unit))),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,inc))
error:typeof([mt-bVar(SetCounterMethodTable),packInc-bMAbb(fn(f,arr(unit,unit),tag(some,f,variant([none:unit,some:arr(unit,unit)]))),arr(arr(unit,unit),variant([none:unit,some:arr(unit,unit)]))),unpackSet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,set)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(nat,unit))),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],proj(mt,inc))
error:typeof([mt-bVar(SetCounterMethodTable),packInc-bMAbb(fn(f,arr(unit,unit),tag(some,f,variant([none:unit,some:arr(unit,unit)]))),arr(arr(unit,unit),variant([none:unit,some:arr(unit,unit)]))),unpackSet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,set)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(nat,unit))),packSet-bMAbb(fn(f,arr(nat,unit),tag(some,f,variant([none:unit,some:arr(nat,unit)]))),arr(arr(nat,unit),variant([none:unit,some:arr(nat,unit)]))),unpackGet-bMAbb(fn(mt,SetCounterMethodTable,case(deref(proj(mt,get)),[none=(x,error),some=(f,f)])),arr(SetCounterMethodTable,arr(unit,nat))),packGet-bMAbb(fn(f,arr(unit,nat),tag(some,f,variant([none:unit,some:arr(unit,nat)]))),arr(arr(unit,nat),variant([none:unit,some:arr(unit,nat)]))),SetCounterMethodTable-bTAbb(record([get:ref(variant([none:unit,some:arr(unit,nat)])),set:ref(variant([none:unit,some:arr(nat,unit)])),inc:ref(variant([none:unit,some:arr(unit,unit)]))]),*),SetCounter-bTAbb(record([get:arr(unit,nat),set:arr(nat,unit),inc:arr(unit,unit)]),*),CounterRep-bTAbb(record([x:ref(nat)]),*)],deref(proj(mt,inc)))
eval1:[];fn(mt,SetCounterMethodTable,case(deref(proj(mt,inc)),[none=(x,error),some=(f,f)]))
unpackInc : arr(SetCounterMethodTable,arr(unit,unit))
eval1:[];fn(r,CounterRep,fn(self,SetCounterMethodTable,app(fn(_,unit,app(fn(_,unit,assign(proj(self,inc),app(packInc,fn(_,unit,app(app(unpackSet,self),succ(app(app(unpackGet,self),unit))))))),assign(proj(self,set),app(packSet,fn(i,nat,assign(proj(r,x),i)))))),assign(proj(self,get),app(packGet,fn(_,unit,deref(proj(r,x))))))))
setCounterClass : arr(CounterRep,arr(SetCounterMethodTable,unit))
CounterRep :: *
SetCounter :: *
eval1:[];tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))))
setCounterClass : all(M,SetCounter,all(R,CounterRep,arr(ref(arr(R,M)),arr(R,SetCounter))))
eval1:[];fn(_,unit,let(m,ref(fn(r,CounterRep,error as SetCounter)),let(m_,app(tapp(tapp(setCounterClass,SetCounter),CounterRep),m),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(m,m_)))))
newSetCounter : arr(unit,SetCounter)
eval1:[];app(newSetCounter,unit)
eval1:[];newSetCounter
eval1:[];app(fn(_,unit,let(m,ref(fn(r,CounterRep,error as SetCounter)),let(m_,app(tapp(tapp(setCounterClass,SetCounter),CounterRep),m),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(m,m_))))),unit)
eval1:[];let(m,ref(fn(r,CounterRep,error as SetCounter)),let(m_,app(tapp(tapp(setCounterClass,SetCounter),CounterRep),m),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(m,m_))))
eval1:[];ref(fn(r,CounterRep,error as SetCounter))
eval1:[fn(r,CounterRep,error as SetCounter)];let(m,loc(0),let(m_,app(tapp(tapp(setCounterClass,SetCounter),CounterRep),m),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(m,m_))))
eval1:[fn(r,CounterRep,error as SetCounter)];let(m_,app(tapp(tapp(setCounterClass,SetCounter),CounterRep),loc(0)),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(loc(0),m_)))
eval1:[fn(r,CounterRep,error as SetCounter)];setCounterClass
eval1:[fn(r,CounterRep,error as SetCounter)];let(m_,app(tapp(tapp(tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)))),SetCounter),CounterRep),loc(0)),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(loc(0),m_)))
eval1:[fn(r,CounterRep,error as SetCounter)];tapp(tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)))),SetCounter)
eval1:[fn(r,CounterRep,error as SetCounter)];let(m_,app(tapp(tfn(R,CounterRep,fn(self,ref(arr(R,SetCounter)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))),CounterRep),loc(0)),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(loc(0),m_)))
eval1:[fn(r,CounterRep,error as SetCounter)];tapp(tfn(R,CounterRep,fn(self,ref(arr(R,SetCounter)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))),CounterRep)
eval1:[fn(r,CounterRep,error as SetCounter)];let(m_,app(fn(self,ref(arr(CounterRep,SetCounter)),fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)),loc(0)),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(loc(0),m_)))
eval1:[fn(r,CounterRep,error as SetCounter)];app(fn(self,ref(arr(CounterRep,SetCounter)),fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)),loc(0))
eval1:[fn(r,CounterRep,error as SetCounter)];let(m_,fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(m_,r))),assign(loc(0),m_)))
eval1:[fn(r,CounterRep,error as SetCounter)];app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),r))),assign(loc(0),fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter)))
eval1:[fn(r,CounterRep,error as SetCounter)];assign(loc(0),fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter)];app(fn(_,unit,let(r,record([x=ref(succ(zero))]),app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),r))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter)];let(r,record([x=ref(succ(zero))]),app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),r))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter)];ref(succ(zero))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];let(r,record([x=loc(1)]),app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),r))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),record([x=loc(1)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])as SetCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])
c : SetCounter
syntax_check:app(proj(c,get),unit)
syntax_ok:app(proj(c,get),unit)typeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(proj(c,get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];c
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(fn(_,unit,deref(proj(record([x=loc(1)]),x))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];deref(proj(record([x=loc(1)]),x))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];proj(record([x=loc(1)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];deref(loc(1))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];succ(zero)
evalok
succ(zero):nat
syntax_check:app(proj(c,set),succ(succ(succ(zero))))
syntax_ok:app(proj(c,set),succ(succ(succ(zero))))typeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(proj(c,set),succ(succ(succ(zero))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];c
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),set),succ(succ(succ(zero))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),set)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(succ(succ(zero))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];assign(proj(record([x=loc(1)]),x),succ(succ(succ(zero))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];proj(record([x=loc(1)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(zero)];assign(loc(1),succ(succ(succ(zero))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];unit
evalok
unit:unit
syntax_check:app(proj(c,inc),unit)
syntax_ok:app(proj(c,inc),unit)typeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(c,inc),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];c
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),inc),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),inc)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];deref(loc(0))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),record([x=loc(1)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])as SetCounter,set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])as SetCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),set)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];deref(loc(0))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(app(proj(app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),record([x=loc(1)])),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),record([x=loc(1)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])as SetCounter,get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))])as SetCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(app(fn(_,unit,deref(proj(record([x=loc(1)]),x))),unit)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(_,unit,deref(proj(record([x=loc(1)]),x))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(deref(proj(record([x=loc(1)]),x))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];proj(record([x=loc(1)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(deref(loc(1))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];deref(loc(1))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];app(fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),succ(succ(succ(succ(zero)))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];assign(proj(record([x=loc(1)]),x),succ(succ(succ(succ(zero)))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];proj(record([x=loc(1)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(zero)))];assign(loc(1),succ(succ(succ(succ(zero)))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];unit
evalok
unit:unit
syntax_check:app(proj(c,get),unit)
syntax_ok:app(proj(c,get),unit)typeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];app(proj(c,get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];c
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];proj(record([get=fn(_,unit,deref(proj(record([x=loc(1)]),x))),set=fn(i,nat,assign(proj(record([x=loc(1)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),record([x=loc(1)])),set),succ(app(proj(app(deref(loc(0)),record([x=loc(1)])),get),unit))))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];app(fn(_,unit,deref(proj(record([x=loc(1)]),x))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];deref(proj(record([x=loc(1)]),x))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];proj(record([x=loc(1)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];deref(loc(1))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];succ(succ(succ(succ(zero))))
evalok
succ(succ(succ(succ(zero)))):nat
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))))
setCounterClass : all(M,SetCounter,all(R,CounterRep,arr(ref(arr(R,M)),arr(R,SetCounter))))
InstrCounter :: *
InstrCounterRep :: *
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];tfn(M,InstrCounter,tfn(R,InstrCounterRep,fn(self,ref(arr(R,M)),fn(r,R,let(super,app(tapp(tapp(setCounterClass,M),R),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))))
instrCounterClass : all(M,InstrCounter,all(R,InstrCounterRep,arr(ref(arr(R,M)),arr(R,InstrCounter))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];fn(_,unit,let(m,ref(fn(r,InstrCounterRep,error as InstrCounter)),let(m_,app(tapp(tapp(instrCounterClass,InstrCounter),InstrCounterRep),m),let(_,assign(m,m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))))
newInstrCounter : arr(unit,InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];app(newInstrCounter,unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];newInstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];app(fn(_,unit,let(m,ref(fn(r,InstrCounterRep,error as InstrCounter)),let(m_,app(tapp(tapp(instrCounterClass,InstrCounter),InstrCounterRep),m),let(_,assign(m,m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r)))))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];let(m,ref(fn(r,InstrCounterRep,error as InstrCounter)),let(m_,app(tapp(tapp(instrCounterClass,InstrCounter),InstrCounterRep),m),let(_,assign(m,m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r)))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero))))];ref(fn(r,InstrCounterRep,error as InstrCounter))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m,loc(2),let(m_,app(tapp(tapp(instrCounterClass,InstrCounter),InstrCounterRep),m),let(_,assign(m,m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r)))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m_,app(tapp(tapp(instrCounterClass,InstrCounter),InstrCounterRep),loc(2)),let(_,assign(loc(2),m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];instrCounterClass
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m_,app(tapp(tapp(tfn(M,InstrCounter,tfn(R,InstrCounterRep,fn(self,ref(arr(R,M)),fn(r,R,let(super,app(tapp(tapp(setCounterClass,M),R),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))))),InstrCounter),InstrCounterRep),loc(2)),let(_,assign(loc(2),m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];tapp(tfn(M,InstrCounter,tfn(R,InstrCounterRep,fn(self,ref(arr(R,M)),fn(r,R,let(super,app(tapp(tapp(setCounterClass,M),R),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))))),InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m_,app(tapp(tfn(R,InstrCounterRep,fn(self,ref(arr(R,InstrCounter)),fn(r,R,let(super,app(tapp(tapp(setCounterClass,InstrCounter),R),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),InstrCounterRep),loc(2)),let(_,assign(loc(2),m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];tapp(tfn(R,InstrCounterRep,fn(self,ref(arr(R,InstrCounter)),fn(r,R,let(super,app(tapp(tapp(setCounterClass,InstrCounter),R),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))),InstrCounterRep)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m_,app(fn(self,ref(arr(InstrCounterRep,InstrCounter)),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))),loc(2)),let(_,assign(loc(2),m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];app(fn(self,ref(arr(InstrCounterRep,InstrCounter)),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),self),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))),loc(2))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(m_,fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),let(_,assign(loc(2),m_),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(m_,r))))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];let(_,assign(loc(2),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))),let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),r)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,error as InstrCounter)];assign(loc(2),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))];let(_,unit,let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),r)))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))];let(r,record([x=ref(succ(zero)),a=ref(zero)]),app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),r))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter))];ref(succ(zero))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero)];let(r,record([x=loc(3),a=ref(zero)]),app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),r))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero)];ref(zero)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(r,record([x=loc(3),a=loc(4)]),app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),r))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),record([x=loc(3),a=loc(4)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(super,record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];setCounterClass
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(super,app(tapp(tapp(tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)))),InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(super,record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];tapp(tfn(M,SetCounter,tfn(R,CounterRep,fn(self,ref(arr(R,M)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)))),InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(super,app(tapp(tfn(R,CounterRep,fn(self,ref(arr(R,InstrCounter)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))),InstrCounterRep),loc(2)),record([get=proj(app(super,record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(super,record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];tapp(tfn(R,CounterRep,fn(self,ref(arr(R,InstrCounter)),fn(r,R,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter))),InstrCounterRep)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(super,app(fn(self,ref(arr(InstrCounterRep,InstrCounter)),fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)),loc(2)),record([get=proj(app(super,record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(super,record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(fn(self,ref(arr(InstrCounterRep,InstrCounter)),fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(self),r),set),succ(app(proj(app(deref(self),r),get),unit))))])as SetCounter)),loc(2))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];let(super,fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([get=proj(app(super,record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(super,record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter,get),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter,get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))]),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),inc)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)]))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter,inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter,inc)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))])as SetCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))]),inc),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,assign(proj(record([x=loc(3),a=loc(4)]),x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit))))]),inc)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])as InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])
ic : InstrCounter
syntax_check:ic
syntax_ok:ictypeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];ic
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))])
evalok
record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))]):InstrCounter
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(ic,get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];ic
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x)))
get : arr(unit,nat)
syntax_check:get
syntax_ok:gettypeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];get
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x)))
evalok
fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))):arr(unit,nat)
syntax_check:app(proj(ic,get),unit)
syntax_ok:app(proj(ic,get),unit)typeok
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(proj(ic,get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];ic
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))]),get),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([get=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),set=fn(i,nat,app(fn(_,unit,app(proj(app(fn(r,InstrCounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(2)),r),set),succ(app(proj(app(deref(loc(2)),r),get),unit))))])as SetCounter),record([x=loc(3),a=loc(4)])),set),i)),assign(proj(record([x=loc(3),a=loc(4)]),a),succ(deref(proj(record([x=loc(3),a=loc(4)]),a)))))),inc=fn(_,unit,app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),set),succ(app(proj(app(deref(loc(2)),record([x=loc(3),a=loc(4)])),get),unit)))),accesses=fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),a)))]),get)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];app(fn(_,unit,deref(proj(record([x=loc(3),a=loc(4)]),x))),unit)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];deref(proj(record([x=loc(3),a=loc(4)]),x))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];proj(record([x=loc(3),a=loc(4)]),x)
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];deref(loc(3))
eval1:[fn(r,CounterRep,record([get=fn(_,unit,deref(proj(r,x))),set=fn(i,nat,assign(proj(r,x),i)),inc=fn(_,unit,app(proj(app(deref(loc(0)),r),set),succ(app(proj(app(deref(loc(0)),r),get),unit))))])as SetCounter),succ(succ(succ(succ(zero)))),fn(r,InstrCounterRep,let(super,app(tapp(tapp(setCounterClass,InstrCounter),InstrCounterRep),loc(2)),record([get=proj(app(super,r),get),set=fn(i,nat,app(fn(_,unit,app(proj(app(super,r),set),i)),assign(proj(r,a),succ(deref(proj(r,a)))))),inc=proj(app(super,r),inc),accesses=fn(_,unit,deref(proj(r,a)))])as InstrCounter)),succ(zero),zero];succ(zero)
evalok
succ(zero):nat
