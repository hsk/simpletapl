lambda x:Top.x : Top -> Top
lambda x:Top.x : Top
lambda x:Top.x : Top -> Top
lambda z:Top.z : Top
"hello" : String
unit : Unit
lambda x:A.x : A -> A
true : Bool
{x=true, y=false} : {x:Bool, y:Bool}
true : Bool
{true, false} : {1:Bool, 2:Bool}
true : Bool
{x=true, y=false, a=false} : {x:Top, y:Bool}
6.28318 : Float
lambda X.lambda x:X.x : All X.X -> X
lambda x:All X.X -> X.x : (All X.X -> X) -> (All X.X -> X)
lambda X<:Top -> Top.lambda x:X.x x : All X <: Top -> Top.X -> Top
lambda x:Bool.x : Bool -> Bool
true : Bool
lambda x:Nat.succ x : Nat -> Nat
3 : Nat
T :: *
lambda f:T.lambda x:Nat.f (f x) : T -> Nat -> Nat
{*All Y.Y,lambda x:All Y.Y.x} as {Some X,X -> X} : {Some X,X -> X}
{*Nat,{c=0, f=lambda x:Nat.succ x}} as {Some X,{c:X, f:X -> Nat}} : {Some X,{c:X, f:X -> Nat}}
1 : Nat
Pair :: * => * => *
pair : All X.All Y.X -> Y -> (All R.(X -> Y -> R) -> R)
f : All X.All Y.Pair X Y -> Pair X Y
fst : All X.All Y.Pair X Y -> X
snd : All X.All Y.Pair X Y -> Y
pr : All R.(Nat -> Bool -> R) -> R
0 : Nat
false : Bool
List :: * => *
diverge : All X.Unit -> X
nil : All X.List X
cons : All X.X -> List X -> List X
isnil : All X.List X -> Bool
head : All X.List X -> X
tail : All X.List X -> List X
