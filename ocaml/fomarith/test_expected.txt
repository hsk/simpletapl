Pair :: * => * => *
pair : All X.All Y.X -> Y -> (All R.(X -> Y -> R) -> R)
fst : All X.All Y.Pair X Y -> X
snd : All X.All Y.Pair X Y -> Y
pr : All R.(Nat -> Bool -> R) -> R
0 : Nat
false : Bool
List :: * => *
diverge : All X.Unit -> X
nil : All X.List X
cons : All X.X -> List X -> List X
isnil : All X.List X -> Bool
head : All X.List X -> X
tail : All X.List X -> List X
